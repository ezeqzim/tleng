#! /usr/bin/env python
"""
Para correrlo desde la consola, hay que darle permisos de ejecucion
chmod +x CLambda
"""
import sys
from calculoLambda import *

if len(sys.argv) > 2:
  print("El uso correcto es ./CLambda 'input string' o ./CLambda")
  sys.exit()

if len(sys.argv) == 2:
  exp_str = sys.argv[1]
  print(parse(exp_str))

if len(sys.argv) == 1:
  while True:
    try:
      exp_str = raw_input('> ')
      parsed = parse(exp_str)
      print parsed.printString()
    except EOFError:
      break
    except UnexpectedTokenException as ute:
      print(ute.message)
      pass
    except ExpressionMustBeBool as embb:
      print(embb.message)
      pass
    except ExpressionMustBeNat as embn:
      print(embn.message)
      pass
    except ExpressionsMustHaveEqualType as emheq:
      print(emheq.message)
      pass
    except ExpressionMustBeApplicable as emba:
      print(emba.message)
      pass

"""
Grammar

Term -> App | succ(Term) | pred(Term) | iszero(Term) | if Term then Term else Term | \var:T.Term | (Term)
App -> ATerm | App ATerm
ATerm -> 0 | true | false | var
T -> Bool R | Nat R
R -> -> T |



Term -> App | succ ( Term ) | pred ( Term ) | iszero ( Term ) | if Term then Term else Term | lambda var : T punto Term | ( Term ).
App -> ATerm | App ATerm.
ATerm -> 0 | true | false | var.
Type -> Bool Arrow | Nat Arrow.
Arrow -> flecha Type | .
"""
